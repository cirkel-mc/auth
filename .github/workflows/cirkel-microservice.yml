name: Deployment Cirkel Microservices

on:
  push:
    branches:
      - 'release/**'
  pull_request_target: 
    branches:
      - "master"

env:
  CR_URL: ${{ secrets.REGISTRY_URL }}/${{ github.repository }}

jobs:
  setup-job-env:
    runs-on: ubuntu-22.04
    outputs:
      kube_config: ${{ steps.set-variable.outputs.kube_config }}
      image_tag: ${{ steps.set-variable.outputs.image_tag }}
      file_values: ${{ steps.set-variable.outcome.file_values }}
      namespace: ${{ steps.set-variable.outputs.namespace }}
    steps:
      - uses: actions/checkout@v3
      - name: Set env variable
        id: set-variable
        shell: bash
        run: |
          branch=${{ github.head_ref }}
          if [ -z "$branch" ]; then
            branch=${{ github.ref }}
          fi
          echo $branch
          if [[ $branch =~ ^refs\/heads\/release\/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            version_tag=$(echo $branch | cut -d '/' -f4)
            echo "image_tag=$(echo $version_tag | sed 's@v@@')" >> $GITHUB_OUTPUT
            echo "file_values=values-prd.yaml" >> $GITHUB_OUTPUT
            echo "kube_config=${{ secrets.KUBECONFIG_PRODUCTION }}" >> $GITHUB_OUTPUT
            echo "namespace=cirkel" >> $GITHUB_OUTPUT
          fi

          if [[ $branch =~ ^feature\/[a-zA-Z0-9_-]{0,50} ]]; then
            echo "image_tag=${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "file_values=values-dev.yaml" >> $GITHUB_OUTPUT
            echo "kube_config=${{ secrets.KUBECONFIG }}" >> $GITHUB_OUTPUT
            echo "namespace=cirkel-dev" >> $GITHUB_OUTPUT
          fi

  build:
    name: Build Application
    runs-on: ubuntu-22.04
    env:
      IMAGE_TAG: ${{ needs.setup-job-env.outputs.image_tag }}
    needs:
      - setup-job-env
    steps:
      - uses: actions/checkout@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.GH_USER }}
          password: ${{ secrets.GH_PERSONAL_TOKEN }}

      - name: Docker build and push into repository
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            user=${{ secrets.GH_USER }}
            token=${{ secrets.GH_PERSONAL_TOKEN }}
          push: true
          tags: |
            ${{ env.CR_URL }}:${{ env.IMAGE_TAG }}
  
  deploy:
      name: Deploy application
      runs-on: ubuntu-22.04
      env:
        IMAGE_TAG: ${{ needs.setup-job-env.outputs.image_tag }}
        KUBECONFIG: ${{ needs.setup-job-env.outputs.kube_config }}
        NAMESPACE: ${{ needs.setup-job-env.outputs.namespace }}
        FILE_VAULES: ${{ needs.setup-job-env.outputs.file_values }}
      needs:
        - setup-job-env
        - build
      steps:
        - name: Deploy with Helm Chart
          uses: wahyd4/kubectl-helm-action@master
          env:
            KUBE_CONFIG_DATA: $kube_config
          with:
            args: |
              helm repo add cirkel ${{ secrets.PAGES_URL }}/charts
              helm upgrade --install ${{ github.repository }} cirkel/cirkel-chart -f ${{ env.FILE_VAULES }} -n ${{ env.NAMESPACE }} \
                --set image.repository=${{ env.CR_URL }} \
                --set image.tag=${{ env.IMAGE_TAG }}
