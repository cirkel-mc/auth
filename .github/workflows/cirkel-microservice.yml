name: Deployment Cirkel Microservices

on:
  push:
    branches:
      - master
  #     - 'release/**'
  # pull_request_target: 
  #   branches:
  #     - "master"

env:
  CR_URL: ${{ secrets.REGISTRY_URL }}/${{ github.repository }}

jobs:
  setup-job-env:
    runs-on: ubuntu-22.04
    outputs:
      kube_config: ${{ steps.set-variable.outputs.kube_config }}
      image_tag: ${{ steps.set-variable.outputs.image_tag }}
      namespace: ${{ steps.set-variable.outputs.namespace }}
    steps:
      - uses: actions/checkout@v3
      - name: Set env variable
        id: set-variable
        shell: bash
        run: |
          if [[ ${{ github.ref }} =~ ^refs\/heads\/release\/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            version_tag=$(echo ${{ github.ref }} | cut -d '/' -f4)
            echo "image_tag=$(echo $version_tag | sed 's@v.@@')
            kube_config=${{ secrets.KUBECONFIG_PRODUCTION }}
            namespace=cirkel" >> $GITHUB_OUTPUT
          fi

          echo "image_tag=${{ github.sha }}
          kube_config=${{ secrets.KUBECONFIG }}
          namespace=cirkel-dev" >> $GITHUB_OUTPUT
      - name: echo env
        run: |
          echo "$namespace"
          printf '%s\n' "$namespace"
          echo "$image_tag"
          printf '%s\n' "$image_tag"

  build:
    name: Build Application
    runs-on: ubuntu-22.04
    needs:
      - setup-job-env
    steps:
      - uses: actions/checkout@v3
      - name: echo env
        run: | 
          echo ${{ needs.setup-job-env.outputs.image_tag }}
          echo ${{ needs.setup-job-env.outputs.namespace }}
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.GH_USER }}
          password: ${{ secrets.GH_PERSONAL_TOKEN }}

      - name: Docker build and push into repository
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            user=${{ secrets.GH_USER }}
            token=${{ secrets.GH_PERSONAL_TOKEN }}
          push: true
          tags: |
            ${{ env.CR_URL }}:$image_tag
  
  deploy:
      name: Deploy application
      runs-on: ubuntu-22.04
      needs:
        - setup-job-env
        - build
      steps:
        - name: Deploy with Helm Chart
          uses: wahyd4/kubectl-helm-action@master
          env:
            KUBE_CONFIG_DATA: $kube_config
          with:
            args: |
              helm repo add cirkel ${{ secrets.PAGES_URL }}/charts
              helm upgrade --install ${{ github.repository }} cirkel/cirkel-chart -n $namespace \
                --set image.repository=${{ env.CR_URL }} \
                --set image.tag=$image_tag
